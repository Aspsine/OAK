apply plugin: 'android'
apply plugin: 'hockeyApp'



android {
    compileSdkVersion 21
    buildToolsVersion "21.1.0"

    signingConfigs {
        release {
            storeFile file(project.properties.keyStore)
            storePassword project.properties.keyStorePassword
            keyAlias project.properties.keyStoreAlias
            keyPassword project.properties.keyStoreAliasPassword
        }
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode buildVersionCode()
        versionName buildVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        applicationVariants.all { variant ->

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = outputFile.name.replace(".apk", "-" + buildVersionName() + "-b" + buildVersionCode() + ".apk")
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
            def file = variant.outputFile

            //noinspection GroovyAssignabilityCheck
            variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + buildVersionName() + "-b" + buildVersionCode() + ".apk"))
        }
    }

}


dependencies {
    provided "com.squareup.dagger:dagger-compiler:1.2.2"
    compile 'com.android.support:support-v4:21.0.2'
    compile 'com.android.support:appcompat-v7:21.0.2'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.1.0'
    compile 'com.squareup.okhttp:okhttp:2.1.0'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.bugsnag:bugsnag-android:2.2.0'
    compile 'com.willowtreeapps:oak-library:1.3.7'
    compile 'com.willowtreeapps.saguaro:saguaro-android:1.0.0'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])


}

/**
 *
 * Start WTA specific config for Building on Teamcity
 *
 */

/**
 * Set up your keystore in the app directory (not the parent, at least not for now)
 * You can add the keystore to your gradle.properties, just don't put the passwords there, obvs.
 * keystorePassword, alias, and aliasPassword are all fed in through command line arguments on the build server
 */

hockeyapp {
    apiToken = "YOUR_HOCKEY_API_TOKEN" // Your API token.
    releaseType = 2 // 0 = Beta; 1 = Live; 2 = Alpha
    notify = 0 // 0 = No Notify; 1 = Notify all testers that can install
    status = 2 // 1 = No users can download; 2 = available to download for users
    outputDirectory = file("build/apk/")
    // Directory where builds are output. Should always be build/apk
    appFileNameRegex = ".*(release).*\\.apk\$"
    // Regex for file. This regex does the release version
    notesType = 1 // 0 = Textile Format; 1 = Markdown Format
    notes = "Some notes. Just checking to see if it works." //Build Notes.
    symbolsDirectory = file("build/symbols/") // Directory for Symbols. Should be build/symbols
    mappingFileNameRegex = "R.txt" //file regex for mapping file. Should be R.txt
}






